{
	"info": {
		"_postman_id": "cfe916dc-298d-4625-ad1b-f471702ae477",
		"name": "EShopAPI-Local",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "9121726"
	},
	"item": [
		{
			"name": "Register User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"const response = pm.response.json();",
							"",
							"console.log(pm.response)",
							"",
							"pm.test(\"Status should be Created\",()=>{",
							"    pm.expect(pm.response.status).to.eql(\"Created\")",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\" : \"kristina2 owona\",     \n  \"email\" : \"kristina2@owona.com\",     \n  \"password\" : \"Xavier678+s\",     \n  \"passwordConfirm\" : \"Xavier678+s\",  \n  \"isAdmin\"  : true,\n  \"photo\" : \"logo3.png\"    \n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/auth/register",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"auth",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create an Order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"const response = pm.response.json();",
							"",
							"console.log(pm.response)",
							"",
							"pm.test(\"Status should be Created\",()=>{",
							"    pm.expect(pm.response.status).to.eql(\"Created\")",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{ACCESS_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"delivered_at\": \"2023-04-08T15:04:05Z\",\n  \"is_delivered\": false,\n  \"is_paid\": false,\n  \"orderItemList\": [\n    {\n      \"image\": \"img Air Jordan\",\n      \"name\": \"shoes\",\n      \"price\": 120,\n      \"product_id\": 2,\n      \"quantity\": 30\n    }\n  ],\n  \"paid_at\": \"2023-04-08T15:04:05Z\",\n  \"payment_method\": \"card\",\n  \"payment_result\": {\n    \"email_address\": \"franck@gmail.com\",\n    \"payment_result_id\": \"result2\",\n    \"status\": \"ok\",\n    \"update_time\": \"string\"\n  },\n  \"shippingAddress\": {\n    \"address\": \"4 rue de vic\",\n    \"city\": \"Nacy\",\n    \"country\": \"France\",\n    \"postal_code\": \"54000\"\n  },\n  \"shipping_price\": 500,\n  \"tax_price\": 20,\n  \"total_price\": 650,\n  \"user_id\": 2\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/orders",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"orders"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a Review",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"const response = pm.response.json();",
							"",
							"console.log(pm.response)",
							"",
							"pm.test(\"Status should be Created\",()=>{",
							"    pm.expect(pm.response.status).to.eql(\"Created\")",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{ACCESS_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"comment\": \"I Just added this review\",\n  \"name\": \"Review on product3\",\n  \"rating\": 4.5,\n  \"user_id\": 2\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/reviews/1",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"reviews",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a Product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"const response = pm.response.json();",
							"",
							"console.log(pm.response)",
							"",
							"pm.test(\"Status should be Created\",()=>{",
							"    pm.expect(pm.response.status).to.eql(\"Created\")",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{ACCESS_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"brand\": \"Nike\",\n  \"category\": \"Nike\",\n  \"countInStock\": 200,\n  \"description\": \"Air Mj\",\n  \"name\": \"Air Mj\",\n  \"numReviews\": 250,\n  \"price\": 450,\n  \"rating\": 4.6 ,\n  \"user_id\": 1\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/products",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"products"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    // Setting variables",
							"    pm.environment.set(\"ACCESS_TOKEN\", pm.response.json().access_token)",
							"    pm.globals.set(\"ACCESS_TOKEN\", pm.response.json().access_token)",
							"    pm.collectionVariables.set(\"ACCESS_TOKEN\", pm.response.json().access_token)",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const response = pm.response.json();",
							"",
							"console.log(pm.response)",
							"",
							"pm.test(\"Status should be Created\",()=>{",
							"    pm.expect(pm.response.status).to.eql(\"OK\")",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2Nzk3NTEzNjcsInVzZXJfaWQiOjF9.2AxjvHjE4X8_pz9SVm0ZmE-dT6OTZ0f4gphoBhRfauw",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"email\" : \"kristina2@owona.com\",     \n  \"password\" : \"Xavier678+s\"   \n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/auth/login",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"auth",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "CurrentUser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    // Setting variables",
							"    // pm.environment.set(\"ACCESS_TOKEN\", pm.response.json().access_token)",
							"    // pm.globals.set(\"ACCESS_TOKEN\", pm.response.json().access_token)",
							"    // pm.collectionVariables.set(\"ACCESS_TOKEN\", pm.response.json().access_token)",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const response = pm.response.json();",
							"",
							"console.log(pm.response)",
							"",
							"pm.test(\"Status should be Ok\",()=>{",
							"    pm.expect(pm.response.status).to.eql(\"OK\")",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{ACCESS_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/users/me",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						"me"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    // Setting variables",
							"    // pm.environment.set(\"ACCESS_TOKEN\", pm.response.json().access_token)",
							"    // pm.globals.set(\"ACCESS_TOKEN\", pm.response.json().access_token)",
							"    // pm.collectionVariables.set(\"ACCESS_TOKEN\", pm.response.json().access_token)",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const response = pm.response.json();",
							"",
							"console.log(pm.response)",
							"",
							"pm.test(\"Status should be Ok\",()=>{",
							"    pm.expect(pm.response.status).to.eql(\"OK\")",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{ACCESS_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\" : \"kristina13 owona\",     \n  \"email\" : \"kristina13@owona.com\",     \n  \"password\" : \"Xavier678+s\",     \n  \"passwordConfirm\" : \"Xavier678+s\",  \n  \"isAdmin\"  : true,\n  \"photo\" : \"logo3.png\", \n  \"provider\": \"Real\",\n  \"role\": \"admin\"   \n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/users/13",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						"13"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    // Setting variables",
							"    // pm.environment.set(\"ACCESS_TOKEN\", pm.response.json().access_token)",
							"    // pm.globals.set(\"ACCESS_TOKEN\", pm.response.json().access_token)",
							"    // pm.collectionVariables.set(\"ACCESS_TOKEN\", pm.response.json().access_token)",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const response = pm.response.json();",
							"",
							"console.log(pm.response)",
							"",
							"pm.test(\"Status should be Ok\",()=>{",
							"    pm.expect(pm.response.status).to.eql(\"OK\")",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{ACCESS_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"delivered_at\": \"2023-04-08T15:04:05Z\",\n  \"is_delivered\": false,\n  \"is_paid\": false,\n  \"orderItemList\": [\n    {\n      \"image\": \"img Air2 Jordan\",\n      \"name\": \"shoes2\",\n      \"price\": 180,\n      \"product_id\": 2,\n      \"quantity\": 75\n    },\n     {\n      \"image\": \"img Air2 Jordan\",\n      \"name\": \"shoes2\",\n      \"price\": 220,\n      \"product_id\": 1,\n      \"quantity\": 80\n    }\n  ],\n  \"paid_at\": \"2023-04-08T15:04:05Z\",\n  \"payment_method\": \"card\",\n  \"payment_result\": {\n    \"email_address\": \"franck@gmail.com\",\n    \"payment_result_id\": \"result2\",\n    \"status\": \"ok\",\n    \"update_time\": \"string\"\n  },\n  \"shippingAddress\": {\n    \"address\": \"4 rue de vic\",\n    \"city\": \"Nacy\",\n    \"country\": \"France\",\n    \"postal_code\": \"54000\"\n  },\n  \"shipping_price\": 500,\n  \"tax_price\": 20,\n  \"total_price\": 650,\n  \"user_id\": 2\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/orders/5",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"orders",
						"5"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update OrderToDeliver",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    // Setting variables",
							"    // pm.environment.set(\"ACCESS_TOKEN\", pm.response.json().access_token)",
							"    // pm.globals.set(\"ACCESS_TOKEN\", pm.response.json().access_token)",
							"    // pm.collectionVariables.set(\"ACCESS_TOKEN\", pm.response.json().access_token)",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const response = pm.response.json();",
							"",
							"console.log(pm.response)",
							"",
							"pm.test(\"Status should be Ok\",()=>{",
							"    pm.expect(pm.response.status).to.eql(\"OK\")",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{ACCESS_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/orders/delivered/5",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"orders",
						"delivered",
						"5"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update OrderToPaid",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    // Setting variables",
							"    // pm.environment.set(\"ACCESS_TOKEN\", pm.response.json().access_token)",
							"    // pm.globals.set(\"ACCESS_TOKEN\", pm.response.json().access_token)",
							"    // pm.collectionVariables.set(\"ACCESS_TOKEN\", pm.response.json().access_token)",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const response = pm.response.json();",
							"",
							"console.log(pm.response)",
							"",
							"pm.test(\"Status should be Ok\",()=>{",
							"    pm.expect(pm.response.status).to.eql(\"OK\")",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{ACCESS_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/orders/paid/5",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"orders",
						"paid",
						"5"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    // Setting variables",
							"    // pm.environment.set(\"ACCESS_TOKEN\", pm.response.json().access_token)",
							"    // pm.globals.set(\"ACCESS_TOKEN\", pm.response.json().access_token)",
							"    // pm.collectionVariables.set(\"ACCESS_TOKEN\", pm.response.json().access_token)",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const response = pm.response.json();",
							"",
							"console.log(pm.response)",
							"",
							"pm.test(\"Status should be Ok\",()=>{",
							"    pm.expect(pm.response.status).to.eql(\"OK\")",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{ACCESS_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/orders/6",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"orders",
						"6"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Products",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    // Setting variables",
							"    // pm.environment.set(\"ACCESS_TOKEN\", pm.response.json().access_token)",
							"    // pm.globals.set(\"ACCESS_TOKEN\", pm.response.json().access_token)",
							"    // pm.collectionVariables.set(\"ACCESS_TOKEN\", pm.response.json().access_token)",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const response = pm.response.json();",
							"",
							"console.log(pm.response)",
							"",
							"pm.test(\"Status should be Ok\",()=>{",
							"    pm.expect(pm.response.status).to.eql(\"OK\")",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{ACCESS_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"brand\": \"Gucci2\",\n  \"category\": \"Bags2\",\n  \"countInStock\": 150,\n  \"description\": \"Gucci Bags\",\n  \"image\": \"gucci1.png\",\n  \"name\": \"Gucci Bags2\",\n  \"numReviews\": 100,\n  \"price\": 150,\n  \"rating\": 0,\n  \"user_id\": 1\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/products/3",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"products",
						"3"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update User Review",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    // Setting variables",
							"    // pm.environment.set(\"ACCESS_TOKEN\", pm.response.json().access_token)",
							"    // pm.globals.set(\"ACCESS_TOKEN\", pm.response.json().access_token)",
							"    // pm.collectionVariables.set(\"ACCESS_TOKEN\", pm.response.json().access_token)",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const response = pm.response.json();",
							"",
							"console.log(pm.response)",
							"",
							"pm.test(\"Status should be Ok\",()=>{",
							"    pm.expect(pm.response.status).to.eql(\"OK\")",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{ACCESS_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"comment\": \"Review 3 version\",\n  \"name\": \"Version 3 prefered\",\n   \"rating\": 4.5,\n  \"user_id\": 1\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/reviews/1",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"reviews",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get User By Email",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    // Setting variables",
							"    // pm.environment.set(\"ACCESS_TOKEN\", pm.response.json().access_token)",
							"    // pm.globals.set(\"ACCESS_TOKEN\", pm.response.json().access_token)",
							"    // pm.collectionVariables.set(\"ACCESS_TOKEN\", pm.response.json().access_token)",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const response = pm.response.json();",
							"",
							"console.log(pm.response)",
							"",
							"pm.test(\"Status should be Ok\",()=>{",
							"    pm.expect(pm.response.status).to.eql(\"OK\")",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{ACCESS_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/users/kristina2@owona.com",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						"kristina2@owona.com"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Review By Id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    // Setting variables",
							"    // pm.environment.set(\"ACCESS_TOKEN\", pm.response.json().access_token)",
							"    // pm.globals.set(\"ACCESS_TOKEN\", pm.response.json().access_token)",
							"    // pm.collectionVariables.set(\"ACCESS_TOKEN\", pm.response.json().access_token)",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const response = pm.response.json();",
							"",
							"console.log(pm.response)",
							"",
							"pm.test(\"Status should be Ok\",()=>{",
							"    pm.expect(pm.response.status).to.eql(\"OK\")",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{ACCESS_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/reviews/2",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"reviews",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Product By Id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    // Setting variables",
							"    // pm.environment.set(\"ACCESS_TOKEN\", pm.response.json().access_token)",
							"    // pm.globals.set(\"ACCESS_TOKEN\", pm.response.json().access_token)",
							"    // pm.collectionVariables.set(\"ACCESS_TOKEN\", pm.response.json().access_token)",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const response = pm.response.json();",
							"",
							"console.log(pm.response)",
							"",
							"pm.test(\"Status should be Ok\",()=>{",
							"    pm.expect(pm.response.status).to.eql(\"OK\")",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{ACCESS_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/products/3",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"products",
						"3"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Order By Id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    // Setting variables",
							"    // pm.environment.set(\"ACCESS_TOKEN\", pm.response.json().access_token)",
							"    // pm.globals.set(\"ACCESS_TOKEN\", pm.response.json().access_token)",
							"    // pm.collectionVariables.set(\"ACCESS_TOKEN\", pm.response.json().access_token)",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const response = pm.response.json();",
							"",
							"console.log(pm.response)",
							"",
							"pm.test(\"Status should be Ok\",()=>{",
							"    pm.expect(pm.response.status).to.eql(\"OK\")",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{ACCESS_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/orders/5",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"orders",
						"5"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Review List By Product Name",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    // Setting variables",
							"    // pm.environment.set(\"ACCESS_TOKEN\", pm.response.json().access_token)",
							"    // pm.globals.set(\"ACCESS_TOKEN\", pm.response.json().access_token)",
							"    // pm.collectionVariables.set(\"ACCESS_TOKEN\", pm.response.json().access_token)",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const response = pm.response.json();",
							"",
							"console.log(pm.response)",
							"",
							"pm.test(\"Status should be Ok\",()=>{",
							"    pm.expect(pm.response.status).to.eql(\"OK\")",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{ACCESS_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/reviews/AirJordan/product/3",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"reviews",
						"AirJordan",
						"product",
						"3"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    // Setting variables",
							"    // pm.environment.set(\"ACCESS_TOKEN\", pm.response.json().access_token)",
							"    // pm.globals.set(\"ACCESS_TOKEN\", pm.response.json().access_token)",
							"    // pm.collectionVariables.set(\"ACCESS_TOKEN\", pm.response.json().access_token)",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const response = pm.response.json();",
							"",
							"console.log(pm.response)",
							"",
							"pm.test(\"Status should be Ok\",()=>{",
							"    pm.expect(pm.response.status).to.eql(\"OK\")",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{ACCESS_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/users/all/5/1",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						"all",
						"5",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Orders",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    // Setting variables",
							"    // pm.environment.set(\"ACCESS_TOKEN\", pm.response.json().access_token)",
							"    // pm.globals.set(\"ACCESS_TOKEN\", pm.response.json().access_token)",
							"    // pm.collectionVariables.set(\"ACCESS_TOKEN\", pm.response.json().access_token)",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const response = pm.response.json();",
							"",
							"console.log(pm.response)",
							"",
							"pm.test(\"Status should be Ok\",()=>{",
							"    pm.expect(pm.response.status).to.eql(\"OK\")",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{ACCESS_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/orders/all/5/1",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"orders",
						"all",
						"5",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get User Orders",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    // Setting variables",
							"    // pm.environment.set(\"ACCESS_TOKEN\", pm.response.json().access_token)",
							"    // pm.globals.set(\"ACCESS_TOKEN\", pm.response.json().access_token)",
							"    // pm.collectionVariables.set(\"ACCESS_TOKEN\", pm.response.json().access_token)",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const response = pm.response.json();",
							"",
							"console.log(pm.response)",
							"",
							"pm.test(\"Status should be Ok\",()=>{",
							"    pm.expect(pm.response.status).to.eql(\"OK\")",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{ACCESS_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/orders/1/user/3",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"orders",
						"1",
						"user",
						"3"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Products",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    // Setting variables",
							"    // pm.environment.set(\"ACCESS_TOKEN\", pm.response.json().access_token)",
							"    // pm.globals.set(\"ACCESS_TOKEN\", pm.response.json().access_token)",
							"    // pm.collectionVariables.set(\"ACCESS_TOKEN\", pm.response.json().access_token)",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const response = pm.response.json();",
							"",
							"console.log(pm.response)",
							"",
							"pm.test(\"Status should be Ok\",()=>{",
							"    pm.expect(pm.response.status).to.eql(\"OK\")",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{ACCESS_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/products/all/5/1",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"products",
						"all",
						"5",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Top Products",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    // Setting variables",
							"    // pm.environment.set(\"ACCESS_TOKEN\", pm.response.json().access_token)",
							"    // pm.globals.set(\"ACCESS_TOKEN\", pm.response.json().access_token)",
							"    // pm.collectionVariables.set(\"ACCESS_TOKEN\", pm.response.json().access_token)",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const response = pm.response.json();",
							"",
							"console.log(pm.response)",
							"",
							"pm.test(\"Status should be Ok\",()=>{",
							"    pm.expect(pm.response.status).to.eql(\"OK\")",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{ACCESS_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/products/top/2",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"products",
						"top",
						"2"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8000/api/v1",
			"type": "string"
		},
		{
			"value": "",
			"type": "string"
		},
		{
			"key": "ACCESS_TOKEN",
			"value": ""
		}
	]
}