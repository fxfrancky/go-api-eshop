version: '3'
services:
  postgres:
    image: postgres:latest
    container_name: postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - progresDB:/var/lib/postgresql/data


  redis:
    image: redis:alpine
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --replica-read-only no
    volumes:
      - redisDB:/data
  

  # Api
  go-api-eshop-api:
    image: go-api-eshop
    container_name: go-api-eshop-api
    restart: unless-stopped
    tty: true
    stdin_open: true

    build: 
      context: .
      dockerfile: ./Dockerfile
    ports:
      - "8000:8000"
    env_file:
      - ./app.env

    depends_on:
      - postgres
      - redis
    links:
      - postgres
      - redis
    entrypoint:
      [
        "/app/wait-for.sh",
        "postgres:5432",
        "--",
        "/app/start.sh"
      ]
    command: [ "/app/main" ]


  # Caddy Server
  caddy:
    image: caddy/caddy:2.6.4-alpine
    container_name: caddy-service
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
    - $PWD/Caddyfile:/etc/caddy/Caddyfile
    - $PWD/site:/srv
    - caddy_data:/data
    - caddy_config:/config

volumes:
  redisDB:
  progresDB:
  caddy_data:
  caddy_config:
