// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "produces": [
        "application/json"
    ],
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "ESHOP API Support",
            "email": "contact@owonafx.com"
        },
        "license": {
            "name": "api-eshop 2.0"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/auth/login": {
            "post": {
                "description": "Signin/Login  a user to the API.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "login a user to the API.",
                "parameters": [
                    {
                        "description": "Sign In Input",
                        "name": "signInput",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.SignInInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "answer",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Status BadRequest",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Status Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Status UnprocessableEntity",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Status BadGateway",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/logout": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Logout  of the the API.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Logout  of the the API.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Status Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Status BadGateway",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/products": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "CreateProduct create a new Product",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "create a new Product",
                "operationId": "create-product",
                "parameters": [
                    {
                        "description": "ProductRequest",
                        "name": "ProductRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.createProductRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handlers.productResponse"
                        }
                    },
                    "400": {
                        "description": "Status BadRequest",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Status Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "409": {
                        "description": "Status Conflict",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Status UnprocessableEntity",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Status BadGateway",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/products/top/{limit}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Display top Products. Auth is required",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Display top Products",
                "operationId": "top-products",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit number of products returned (default is 20)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.productListResponse"
                        }
                    },
                    "400": {
                        "description": "Status BadRequest",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Status Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Status BadGateway",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/products/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a product. Auth required",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Get a product",
                "operationId": "get-product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Id of the product to get",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.productResponse"
                        }
                    },
                    "400": {
                        "description": "Status BadRequest",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Status Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update a Product. Auth is required",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Update a new Product",
                "operationId": "update-product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Id of the product to update",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Product to update",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.updateProductRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.productResponse"
                        }
                    },
                    "400": {
                        "description": "Status BadRequest",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Status Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Status Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "409": {
                        "description": "Status Conflict",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Status UnprocessableEntity",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Status BadGateway",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a Product. Auth is required",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Delete a Product",
                "operationId": "delete-product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Id of the product to delete",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.productResponse"
                        }
                    },
                    "400": {
                        "description": "Status BadRequest",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Status Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Status Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "409": {
                        "description": "Status Conflict",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Status UnprocessableEntity",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Status BadGateway",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/refresh": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "refresh the current TOKEN.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "refresh the current TOKEN",
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Status Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Status UnprocessableEntity",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Status BadGateway",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/register": {
            "post": {
                "description": "Signup/Register a new user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "create a new user",
                "parameters": [
                    {
                        "description": "SignInput",
                        "name": "signInput",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.SignUpInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Status BadRequest",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Status Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "409": {
                        "description": "Status Conflict",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Status BadGateway",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/reviews/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a review. Auth required",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Review"
                ],
                "summary": "Get a review",
                "operationId": "get-review",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Id of the review to get",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.reviewResponse"
                        }
                    },
                    "400": {
                        "description": "Status BadRequest",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Status Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update a review. Auth is required",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Review"
                ],
                "summary": "Update a review",
                "operationId": "update-review",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Id of the review to update",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Review to update",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.reviewRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.reviewResponse"
                        }
                    },
                    "400": {
                        "description": "Status BadRequest",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Status Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Status Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "409": {
                        "description": "Status Conflict",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Status UnprocessableEntity",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Status BadGateway",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a Review. Auth is required",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Review"
                ],
                "summary": "Delete a Review",
                "operationId": "delete-review",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Id of the review to delete",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "product deleted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Status BadRequest",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Status Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Status Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "409": {
                        "description": "Status Conflict",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Status UnprocessableEntity",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Status BadGateway",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/reviews/{productName}/product/{limit}/{offset}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Display all Reviews By Product Id. Auth is required",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Review"
                ],
                "summary": "Display all Reviews By Product Id",
                "operationId": "all-products-reviews",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the product for reviews",
                        "name": "productName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Limit number of products returned (default is 20)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset/Skip number of products (default is 0)",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.reviewListResponse"
                        }
                    },
                    "400": {
                        "description": "Status BadRequest",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Status Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Status BadGateway",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/reviews/{product_id}": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "CreateReview create a new Product Review",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Review"
                ],
                "summary": "create a new Product Review",
                "operationId": "create-review",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Id of the product to get",
                        "name": "product_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Review Request",
                        "name": "ReviewRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.reviewRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handlers.reviewResponse"
                        }
                    },
                    "400": {
                        "description": "Status BadRequest",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Status Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "409": {
                        "description": "Status Conflict",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Status UnprocessableEntity",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Status BadGateway",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/users/{id}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a User. Auth is required",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Delete a User",
                "operationId": "delete-user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Id of the user to delete",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.userResponse"
                        }
                    },
                    "400": {
                        "description": "Status BadRequest",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Status Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Status Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "409": {
                        "description": "Status Conflict",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Status UnprocessableEntity",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Status BadGateway",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/users/{limit}/{offset}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Display all Users. Auth is required",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Display all Users",
                "operationId": "all-users",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit number of products returned (default is 20)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset/Skip number of products (default is 0)",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.userListResponse"
                        }
                    },
                    "400": {
                        "description": "Status BadRequest",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Status Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Status BadGateway",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/orders": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "CreateOrder create a new Order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "create a new Order",
                "operationId": "create-order",
                "parameters": [
                    {
                        "description": "orderRequest",
                        "name": "order",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.orderRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handlers.orderResponse"
                        }
                    },
                    "400": {
                        "description": "Status BadRequest",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Status Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "409": {
                        "description": "Status Conflict",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Status UnprocessableEntity",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Status BadGateway",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/orders/all/{limit}/{offset}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Display all Orders. Auth is required",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Display all Orders",
                "operationId": "all-orders",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit number of orders returned (default is 20)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset/Skip number of orders (default is 0)",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.orderListResponse"
                        }
                    },
                    "400": {
                        "description": "Status BadRequest",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Status Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Status BadGateway",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/orders/delivered/{id}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update an Order To Delivered. Auth is required",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Update a new Order to Delivered",
                "operationId": "update-order-to-delivered",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Id of the order to update to delivered",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.orderResponse"
                        }
                    },
                    "400": {
                        "description": "Status BadRequest",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Status Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Status Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "409": {
                        "description": "Status Conflict",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Status UnprocessableEntity",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Status BadGateway",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/orders/paid/{id}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update an Order To Paid. Auth is required",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Update a new Order to Paid",
                "operationId": "update-order-to-paid",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Id of the order to update to paid",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.orderResponse"
                        }
                    },
                    "400": {
                        "description": "Status BadRequest",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Status Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Status Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "409": {
                        "description": "Status Conflict",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Status UnprocessableEntity",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Status BadGateway",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/orders/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get an order. Auth required",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Get an order",
                "operationId": "get-order",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Id of the order to get",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.orderResponse"
                        }
                    },
                    "400": {
                        "description": "Status BadRequest",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Status Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update a Order. Auth is required",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Update a new Order",
                "operationId": "update-order",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Id of the order to update",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Order to update",
                        "name": "order",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.orderRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.orderResponse"
                        }
                    },
                    "400": {
                        "description": "Status BadRequest",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Status Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Status Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "409": {
                        "description": "Status Conflict",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Status UnprocessableEntity",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Status BadGateway",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete an Order. Auth is required",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Delete an Order",
                "operationId": "delete-order",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Id of the order to delete",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.orderResponse"
                        }
                    },
                    "400": {
                        "description": "Status BadRequest",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Status Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Status Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "409": {
                        "description": "Status Conflict",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Status UnprocessableEntity",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Status BadGateway",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/orders/{userId}/user/{limit}/{offset}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Display all user Orders. Auth is required",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Display all user Orders",
                "operationId": "all-user-orders",
                "parameters": [
                    {
                        "type": "string",
                        "description": "userId of the order to get",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Limit number of orders returned (default is 20)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset/Skip number of orders (default is 0)",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.orderListResponse"
                        }
                    },
                    "400": {
                        "description": "Status BadRequest",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Status Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Status BadGateway",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/products/all": {
            "get": {
                "description": "Display all Products. Auth is not required",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Display all Products",
                "operationId": "all-products",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit number of products returned (default is 20)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset/Skip number of products (default is 0)",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.productListResponse"
                        }
                    },
                    "400": {
                        "description": "Status BadRequest",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Status Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Status BadGateway",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/users/me": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get current user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Logout  of the the API.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/users/{email}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a user. Auth required",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get a user",
                "operationId": "get-user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Email of the user to get",
                        "name": "email",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.userResponse"
                        }
                    },
                    "400": {
                        "description": "Status BadRequest",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Status Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/users/{id}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update a User. Auth is required",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Update a user",
                "operationId": "update-user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Id of the user to update",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User to update",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.updateUserRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.userResponse"
                        }
                    },
                    "400": {
                        "description": "Status BadRequest",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Status Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Status Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "409": {
                        "description": "Status Conflict",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Status UnprocessableEntity",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Status BadGateway",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "gorm.DeletedAt": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string"
                },
                "valid": {
                    "description": "Valid is true if Time is not NULL",
                    "type": "boolean"
                }
            }
        },
        "handlers.SignInInput": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "handlers.SignUpInput": {
            "type": "object",
            "required": [
                "email",
                "name",
                "password",
                "passwordConfirm"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "isAdmin": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 8
                },
                "passwordConfirm": {
                    "type": "string",
                    "minLength": 8
                },
                "photo": {
                    "type": "string"
                }
            }
        },
        "handlers.createProductRequest": {
            "type": "object",
            "required": [
                "brand",
                "category",
                "description",
                "name",
                "price"
            ],
            "properties": {
                "brand": {
                    "type": "string"
                },
                "category": {
                    "type": "string"
                },
                "countInStock": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "name": {
                    "description": "UserID      uint   ` + "`" + `json:\"user_id\" validate:\"required\"` + "`" + `",
                    "type": "string"
                },
                "numReviews": {
                    "type": "integer"
                },
                "price": {
                    "type": "number"
                },
                "rating": {
                    "description": "Reviews      []Review ` + "`" + `json:\"reviewList\"` + "`" + `",
                    "type": "number"
                }
            }
        },
        "handlers.orderItemRequest": {
            "type": "object",
            "required": [
                "image",
                "name",
                "price",
                "product_id",
                "quantity"
            ],
            "properties": {
                "image": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "product_id": {
                    "type": "integer"
                },
                "quantity": {
                    "type": "integer"
                }
            }
        },
        "handlers.orderListResponse": {
            "type": "object",
            "properties": {
                "orders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.orderResponse"
                    }
                },
                "ordersCount": {
                    "type": "integer"
                }
            }
        },
        "handlers.orderRequest": {
            "type": "object",
            "required": [
                "payment_method",
                "shipping_price",
                "tax_price",
                "total_price",
                "user_id"
            ],
            "properties": {
                "delivered_at": {
                    "type": "string"
                },
                "is_delivered": {
                    "type": "boolean",
                    "default": false
                },
                "is_paid": {
                    "type": "boolean"
                },
                "orderItemList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.orderItemRequest"
                    }
                },
                "paid_at": {
                    "type": "string"
                },
                "payment_method": {
                    "type": "string"
                },
                "payment_result": {
                    "description": "PaymentResultID   uint",
                    "allOf": [
                        {
                            "$ref": "#/definitions/handlers.paymentResultRequest"
                        }
                    ]
                },
                "shippingAddress": {
                    "description": "ShippingAddressID uint",
                    "allOf": [
                        {
                            "$ref": "#/definitions/handlers.shippingAddressRequest"
                        }
                    ]
                },
                "shipping_price": {
                    "type": "number"
                },
                "tax_price": {
                    "type": "number"
                },
                "total_price": {
                    "type": "number"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "handlers.orderResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "delivered_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_delivered": {
                    "type": "boolean"
                },
                "is_paid": {
                    "type": "boolean"
                },
                "orderItemList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.OrderItem"
                    }
                },
                "paid_at": {
                    "type": "string"
                },
                "payment_method": {
                    "type": "string"
                },
                "payment_result_id": {
                    "type": "integer"
                },
                "shipping_address_id": {
                    "type": "integer"
                },
                "shipping_price": {
                    "type": "number"
                },
                "tax_price": {
                    "type": "number"
                },
                "total_price": {
                    "type": "number"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "handlers.paymentResultRequest": {
            "type": "object",
            "required": [
                "email_address",
                "payment_result_id",
                "status",
                "update_time"
            ],
            "properties": {
                "email_address": {
                    "type": "string"
                },
                "payment_result_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "update_time": {
                    "type": "string"
                }
            }
        },
        "handlers.productListResponse": {
            "type": "object",
            "properties": {
                "products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.productResponse"
                    }
                },
                "productsCount": {
                    "type": "integer"
                }
            }
        },
        "handlers.productResponse": {
            "type": "object",
            "properties": {
                "brand": {
                    "type": "string"
                },
                "category": {
                    "type": "string"
                },
                "countInStock": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "name": {
                    "description": "UserID      uint   ` + "`" + `json:\"user_id\" validate:\"required\"` + "`" + `",
                    "type": "string"
                },
                "numReviews": {
                    "type": "integer"
                },
                "price": {
                    "type": "number"
                },
                "rating": {
                    "description": "Reviews      []Review",
                    "type": "number"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "handlers.reviewListResponse": {
            "type": "object",
            "properties": {
                "reviews": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.reviewResponse"
                    }
                },
                "reviewsCount": {
                    "type": "integer"
                }
            }
        },
        "handlers.reviewRequest": {
            "type": "object",
            "required": [
                "comment",
                "name",
                "rating",
                "user_id"
            ],
            "properties": {
                "comment": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "product_id": {
                    "type": "integer"
                },
                "rating": {
                    "type": "number"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "handlers.reviewResponse": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "product_id": {
                    "type": "integer"
                },
                "product_name": {
                    "type": "string"
                },
                "rating": {
                    "type": "number"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "handlers.shippingAddressRequest": {
            "type": "object",
            "required": [
                "address",
                "city",
                "country",
                "postal_code"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "postal_code": {
                    "type": "string"
                }
            }
        },
        "handlers.updateProductRequest": {
            "type": "object",
            "required": [
                "brand",
                "category",
                "description",
                "name",
                "price"
            ],
            "properties": {
                "brand": {
                    "type": "string"
                },
                "category": {
                    "type": "string"
                },
                "countInStock": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "name": {
                    "description": "ID          uint   ` + "`" + `json:\"id\" validate:\"required\"` + "`" + `\nUserID      uint   ` + "`" + `json:\"user_id\" validate:\"required\"` + "`" + `",
                    "type": "string"
                },
                "numReviews": {
                    "type": "integer"
                },
                "price": {
                    "type": "number"
                },
                "rating": {
                    "description": "Reviews      []Review ` + "`" + `json:\"reviewList\"` + "`" + `",
                    "type": "number"
                }
            }
        },
        "handlers.updateUserRequest": {
            "type": "object",
            "required": [
                "email",
                "name",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "isAdmin": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 8
                },
                "photo": {
                    "type": "string"
                },
                "provider": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "handlers.userListResponse": {
            "type": "object",
            "properties": {
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.userResponse"
                    }
                },
                "usersCount": {
                    "type": "integer"
                }
            }
        },
        "handlers.userResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "isAdmin": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "photo": {
                    "type": "string"
                },
                "provider": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.Order": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "deliveredAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "isDelivered": {
                    "type": "boolean"
                },
                "isPaid": {
                    "type": "boolean"
                },
                "orderItems": {
                    "description": "OrderItems        []OrderItem ` + "`" + `gorm:\"many2many:order_orderitems;\"` + "`" + `",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.OrderItem"
                    }
                },
                "paidAt": {
                    "type": "string"
                },
                "paymentMethod": {
                    "type": "string"
                },
                "paymentResult": {
                    "$ref": "#/definitions/models.PaymentResult"
                },
                "paymentResultID": {
                    "type": "integer"
                },
                "shippingAddress": {
                    "$ref": "#/definitions/models.ShippingAddress"
                },
                "shippingAddressID": {
                    "type": "integer"
                },
                "shippingPrice": {
                    "type": "number"
                },
                "taxPrice": {
                    "type": "number"
                },
                "totalPrice": {
                    "type": "number"
                },
                "updatedAt": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/models.User"
                },
                "userID": {
                    "type": "integer"
                }
            }
        },
        "models.OrderItem": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "orderID": {
                    "type": "integer"
                },
                "price": {
                    "type": "number"
                },
                "product": {
                    "$ref": "#/definitions/models.Product"
                },
                "productID": {
                    "type": "integer"
                },
                "quantity": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.PaymentResult": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "emailAddress": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "paymentResID": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updateTime": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.Product": {
            "type": "object",
            "properties": {
                "brand": {
                    "type": "string"
                },
                "category": {
                    "type": "string"
                },
                "countInStock": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "name": {
                    "description": "User         User ` + "`" + `gorm:\"foreignKey:UserID\"` + "`" + `\nUserID       uint",
                    "type": "string"
                },
                "numReviews": {
                    "type": "integer"
                },
                "price": {
                    "type": "number"
                },
                "rating": {
                    "type": "number"
                },
                "reviews": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Review"
                    }
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.Review": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "product": {
                    "$ref": "#/definitions/models.Product"
                },
                "productID": {
                    "type": "integer"
                },
                "rating": {
                    "type": "number"
                },
                "updatedAt": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/models.User"
                },
                "userID": {
                    "type": "integer"
                }
            }
        },
        "models.ShippingAddress": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "integer"
                },
                "postalCode": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "isAdmin": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "orders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Order"
                    }
                },
                "password": {
                    "type": "string"
                },
                "photo": {
                    "type": "string"
                },
                "provider": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "verified": {
                    "type": "boolean"
                }
            }
        },
        "models.UserResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "isAdmin": {
                    "type": "boolean"
                },
                "name": {
                    "description": "ID        uuid.UUID ` + "`" + `json:\"id,omitempty\"` + "`" + `",
                    "type": "string"
                },
                "photo": {
                    "type": "string"
                },
                "provider": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{"http", "https"},
	Title:            "GO API ESHOP",
	Description:      "GO API ESHOP Docs.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
